@startuml

title __MOOC's Class Diagram__\n

  namespace uk.ac.reading.sis05kol.mooc {
    abstract class uk.ac.reading.sis05kol.mooc.GameThread {
        {static} + STATE_LOSE : int
        {static} + STATE_PAUSE : int
        {static} + STATE_READY : int
        {static} + STATE_RUNNING : int
        {static} + STATE_WIN : int
        # mBackgroundImage : Bitmap
        # mCanvasHeight : int
        # mCanvasWidth : int
        # mLastTime : long
        # mMode : int
        # score : long
        ~ mGeomagnetic : float[]
        ~ mGravity : float[]
        {static} ~ monitor : Integer
        - elapsed : float
        - mContext : Context
        - mHandler : Handler
        - mRun : boolean
        - mSurfaceHolder : SurfaceHolder
        - now : long
        + GameThread()
        + cleanup()
        + doStart()
        + getMode()
        + getScore()
        + isRunning()
        + onSensorChanged()
        + onTouch()
        + pause()
        + run()
        + setMode()
        + setRunning()
        + setScore()
        + setState()
        + setState()
        + setSurfaceHolder()
        + setSurfaceSize()
        {abstract} + setupBeginning()
        + unpause()
        + updateScore()
        # actionOnTouch()
        # actionWhenPhoneMoved()
        # doDraw()
        # getScoreString()
        {abstract} # updateGame()
        - updatePhysics()
    }
  }
  

  namespace uk.ac.reading.sis05kol.mooc {
    class uk.ac.reading.sis05kol.mooc.GameView {
        ~ accelerometer : Sensor
        ~ magnetometer : Sensor
        - mHandler : Handler
        - mScoreView : TextView
        - mStatusView : TextView
        + GameView()
        + cleanup()
        + getScoreView()
        + getStatusView()
        + getThread()
        + getmHandler()
        + onAccuracyChanged()
        + onSensorChanged()
        + onWindowFocusChanged()
        + removeSensor()
        + setScoreView()
        + setStatusView()
        + setThread()
        + setmHandler()
        + startSensor()
        + surfaceChanged()
        + surfaceCreated()
        + surfaceDestroyed()
    }
  }
  

  namespace uk.ac.reading.sis05kol.mooc {
    class uk.ac.reading.sis05kol.mooc.MainActivity {
        {static} - MENU_RESUME : int
        {static} - MENU_START : int
        {static} - MENU_STOP : int
        + onCreateOptionsMenu()
        + onNothingSelected()
        + onOptionsItemSelected()
        # onCreate()
        # onDestroy()
        # onPause()
        - startGame()
    }
  }
  

  namespace uk.ac.reading.sis05kol.mooc {
    class uk.ac.reading.sis05kol.mooc.TheGame {
        - mBall : Bitmap
        - mBallSpeedX : float
        - mBallSpeedY : float
        - mBallX : float
        - mBallY : float
        - mMinDistanceBetweenBallAndPaddle : float
        - mPaddle : Bitmap
        - mPaddleSpeedX : float
        - mPaddleX : float
        - mSadBall : Bitmap
        - mSadBallX : float[]
        - mSadBallY : float[]
        - mSmileyBall : Bitmap
        - mSmileyBallX : float
        - mSmileyBallY : float
        + TheGame()
        + setupBeginning()
        # actionOnTouch()
        # actionWhenPhoneMoved()
        # doDraw()
        # updateGame()
        - updateBallCollision()
    }
  }
  

  uk.ac.reading.sis05kol.mooc.GameThread o-- uk.ac.reading.sis05kol.mooc.GameView : mGameView
  uk.ac.reading.sis05kol.mooc.GameView .up.|> android.hardware.SensorEventListener
  uk.ac.reading.sis05kol.mooc.GameView .up.|> android.view.SurfaceHolder.Callback
  uk.ac.reading.sis05kol.mooc.GameView -up-|> android.view.SurfaceView
  uk.ac.reading.sis05kol.mooc.GameView o-- uk.ac.reading.sis05kol.mooc.GameThread : thread
  uk.ac.reading.sis05kol.mooc.MainActivity -up-|> android.app.Activity
  uk.ac.reading.sis05kol.mooc.MainActivity o-- uk.ac.reading.sis05kol.mooc.GameThread : mGameThread
  uk.ac.reading.sis05kol.mooc.MainActivity o-- uk.ac.reading.sis05kol.mooc.GameView : mGameView
  uk.ac.reading.sis05kol.mooc.TheGame -up-|> uk.ac.reading.sis05kol.mooc.GameThread


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
